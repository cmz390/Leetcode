import java.util.*;

class Solution {
    public int bitcal (int num)
    {
        int result = 0;
        while(num != 0)
        {
            if((num & 1) ==1) result +=1;
            num = num >> 1;
        }

        return result;
    }
    public List<String> readBinaryWatch(int num) {
        List<String> result = new ArrayList<String>();
        int [] pool = new int[60];
        int i,j, g ,h;
        for(i=0; i<60 ; i++)
            pool[i] = bitcal(i);
        i=j = 0;
        for(i=0;i<4;i++)
        {
            j = num -i;
            if(j>5) continue;
            if(j<0) break;
        for(g=0; g< 12; g++ )
        {
            if(pool[g]==i)
            {
                for(h=0;h<60;h++)
                {
                    if(pool[h]==j)
                    {
                        String s;

                        if(h<10)
                        {
                            s = Integer.toString(g)+":0" + Integer.toString(h);

                        }

                        else  s = Integer.toString(g) + ":" + Integer.toString(h);

                        result.add(s);
                    }

                }
            }
        }

        }
      return result;}
}